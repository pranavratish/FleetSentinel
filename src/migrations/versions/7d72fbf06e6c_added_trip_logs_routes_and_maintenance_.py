"""Added trip logs, routes and maintenance records tables

Revision ID: 7d72fbf06e6c
Revises: 88647e7459e8
Create Date: 2024-09-27 17:30:15.264253

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7d72fbf06e6c'
down_revision: Union[str, None] = '88647e7459e8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('routes',
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('origin', sa.String(length=100), nullable=False),
    sa.Column('destination', sa.String(length=100), nullable=False),
    sa.Column('distance', sa.Float(), nullable=False),
    sa.Column('estimated_duration', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('route_id')
    )
    op.create_index(op.f('ix_routes_route_id'), 'routes', ['route_id'], unique=False)
    op.create_table('maintenance_records',
    sa.Column('maintenance_id', sa.Integer(), nullable=False),
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('maintenance_type', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('cost', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('maintenance_date', sa.Date(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.driver_id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.vehicle_id'], ),
    sa.PrimaryKeyConstraint('maintenance_id')
    )
    op.create_index(op.f('ix_maintenance_records_maintenance_id'), 'maintenance_records', ['maintenance_id'], unique=False)
    op.create_table('trip_logs',
    sa.Column('trip_id', sa.Integer(), nullable=False),
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('mileage_start', sa.Integer(), nullable=False),
    sa.Column('mileage_end', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.driver_id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['routes.route_id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.vehicle_id'], ),
    sa.PrimaryKeyConstraint('trip_id')
    )
    op.create_index(op.f('ix_trip_logs_trip_id'), 'trip_logs', ['trip_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_trip_logs_trip_id'), table_name='trip_logs')
    op.drop_table('trip_logs')
    op.drop_index(op.f('ix_maintenance_records_maintenance_id'), table_name='maintenance_records')
    op.drop_table('maintenance_records')
    op.drop_index(op.f('ix_routes_route_id'), table_name='routes')
    op.drop_table('routes')
    # ### end Alembic commands ###
